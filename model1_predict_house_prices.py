# -*- coding: utf-8 -*-
"""Model1: predict house prices

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1v5wFfRPU_5XeoeNNHQpUDXMugAPyTDNh
"""

# importing the necessary libraries

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from keras.models import Sequential
from keras.layers import Dense
from keras.utils import to_categorical
from sklearn.preprocessing import LabelEncoder

# Here i import the necessary data (the dataset)

data = pd.read_csv('/content/sample_data/california_housing_train.csv')

# Here i define the X (train set) and Y (test set), the model will train with X and apply in Y

X = data.drop('median_house_value', axis=1)
y = data['median_house_value']

# Split the X and Y (70% Train, 30% Test)

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Define the neural network

model = Sequential()
model.add(Dense(64, activation='relu', input_dim=X_train.shape[1]))
model.add(Dense(32, activation='relu'))
model.add(Dense(1, activation='linear'))

# Compile the model

model.compile(optimizer='adam', loss='mean_squared_error', metrics=['mae'])

# Train the model

model.fit(X_train, y_train, epochs=10, batch_size=32, validation_split=0.2)

# Evaluate the model

loss, mae = model.evaluate(X_test, y_test)
print('Mean Absolute Error:', mae)

# Make predictions

predictions = model.predict(X_test)

# Print the predictions

print(predictions)

# Print the real values

print(y_test)